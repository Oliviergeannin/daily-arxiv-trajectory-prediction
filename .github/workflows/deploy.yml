name: 部署到 GitHub Pages

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # 每日中午12点（UTC时间）运行爬取和生成任务
    - cron: '0 4 * * *'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 设置 Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: 安装依赖
        run: |
          pip install arxiv requests openai python-dotenv
          
      - name: 运行 arXiv 爬虫
        run: |
          python scripts/arxiv_crawler.py
        env:
          MODELSCOPE_ACCESS_TOKEN: ${{ secrets.MODELSCOPE_ACCESS_TOKEN }}
          
      - name: 生成论文摘要
        run: |
          python scripts/generate_summaries.py
        env:
          MODELSCOPE_ACCESS_TOKEN: ${{ secrets.MODELSCOPE_ACCESS_TOKEN }}
          
      - name: 提交更改
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add papers.md
          if git diff --staged --quiet; then
            echo "没有更改需要提交"
          else
            # 获取当前日期
            CURRENT_DATE=$(date '+%Y-%m-%d')
            git commit -m "自动更新：爬取新论文并生成摘要 - $CURRENT_DATE [skip ci]"
            git pull --rebase origin main || true
            
            git push origin main
          fi
          
      - name: 构建网站
        run: |
          python scripts/build_site.py
          
      - name: 设置 Pages
        uses: actions/configure-pages@v5
        
      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v4
        with:
          path: './site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
